<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/tool
        http://www.springframework.org/schema/tool/spring-tool.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">


  <!--&lt;!&ndash; 模板解析器2  &ndash;&gt;-->
  <!--<bean id="templateResolver" class="org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver">-->
    <!--<property name="prefix" value="/WEB-INF/" />-->
    <!--<property name="suffix" value=".html" />-->
    <!--<property name="templateMode" value="HTML5"/>-->
    <!--<property name="cacheable" value="false" />-->
    <!--<property name="characterEncoding" value="UTF-8"/>-->
  <!--</bean>-->
  <!--&lt;!&ndash; 模板引擎2  &ndash;&gt;-->
  <!--<bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">-->
    <!--<property name="templateResolver" ref="templateResolver" />-->
  <!--</bean>-->

  <!--&lt;!&ndash; 视图解析器2  &ndash;&gt;-->
  <!--<bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">-->
    <!--<property name="templateEngine" ref="templateEngine" />-->
    <!--<property name="characterEncoding"  value="UTF-8" />-->
  <!--</bean>-->


  <!--视图解释器 -->
  <!--<bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">-->
    <!--<property name="suffix" value=".ftl"/>-->
    <!--<property name="contentType" value="text/html;charset=UTF-8"></property>-->
  <!--</bean>-->

  <!-- 配置freeMarker的模板路径 -->
  <!--<bean id="freeMarkerConfigurer" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">-->
    <!--<property name="templateLoaderPath" value="classpath:/ftl/"/>-->
    <!--<property name="defaultEncoding" value="utf-8"/>-->
  <!--</bean>-->

  <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <property name="suffix" value=".jsp"></property>
    <!--<property name="prefix" value="Student"></property>-->
  </bean>

  <!--相当于注册了RequestMappingHandlerMapping和RequestMappingHandlerAdapter，配置一些messageconverter。即解决了@Controller注解的使用前提配置。-->
  <mvc:annotation-driven></mvc:annotation-driven>

  <!--配置上传组件配置-->
  <bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <!--  set the max upload size100MB     -->
    <property name="maxUploadSize">
      <value>104857600</value>
    </property>
    <property name="maxInMemorySize">
      <value>4096</value>
    </property>
  </bean>

  <!--扫描注解-->
  <context:component-scan base-package="com.hy"></context:component-scan>


  <!-- 使用xml配置aop ,引入AOP的命名空间-->
  <!-- 强制使用cglib代理，如果不设置，将默认使用jdk的代理，但是jdk的代理是基于接口的 -->
  <aop:config proxy-target-class="true" />
  <!--<aop:config>-->
    <!--&lt;!&ndash;定义切面&ndash;&gt;-->
    <!--<aop:aspect id="logAspect" ref="logInterceptor">-->
      <!--&lt;!&ndash;定义切入点&ndash;&gt;-->
      <!--<aop:pointcut expression="execution(* com.hy.yiya.*.*.*(..))"  id="logPointCut"/>-->
      <!--&lt;!&ndash;方法执行之前被调用执行的&ndash;&gt;-->
      <!--&lt;!&ndash;<aop:before method="before" pointcut-ref="logPointCut"/>&lt;!&ndash;一个切入点的引用&ndash;&gt;&ndash;&gt;-->
      <!--&lt;!&ndash;<aop:after method="after" pointcut-ref="logPointCut"/>&lt;!&ndash;一个切入点的引用&ndash;&gt;&ndash;&gt;-->
      <!--&lt;!&ndash;<aop:after-throwing method="afterThrowing" pointcut-ref="logPointCut" />&ndash;&gt;-->
      <!--&lt;!&ndash;<aop:after-returning method="afterReturn" pointcut-ref="logPointCut" />&ndash;&gt;-->
      <!--<aop:around method="around" pointcut-ref="logPointCut"/>-->
    <!--</aop:aspect>-->
  <!--</aop:config>-->


</beans>
